Сценарии пишутся почти так же, как и в оригинальной игре

Отличия:
	Загрузка:
		Запустить можно только один мод, для запуска другого будет выключен уже запущенный
		Моды загружаются из конкретного каталога в resources/mods/
		Подгружаются все rpy-файлы (не путать с rpyc) из этого каталога
		Подгружаются все rpy-файлы из resources/mods/inc/
	
	Воспроизведение:
		Ну, во-первых, разумеется, ещё поддерживаются далеко не все возможности оригинала, например, не реализованы
			Эффекты (после with; fadeIn и fadeOut в музыке)
			Указания после двоеточия (:) в командах типа "show owl:"
			Карта
			И много чего ещё...
		
		Локация и персонажи отображаются всегда на самом дальнем плане
			Следовательно, bg и cg всегда закрывают локацию и персонажей, если существуют
				Удаляются они, как и в оригинале, командой hide
				Команда scene без параметров удаляет все спрайты
			
		Текстовое окно всегда на самом переднем плане
		Спрайты, bg и cg (подобные тем, что в оригинале, или непосредственно они сами) отображаются в том порядке, в котором они объявляются
			Порядок можно изменить, используя behind
		
		Переключение между локациями:
			$ set_location("location_name", "place_name")
			Где place_name - имя места в локации location_name
			Перед показом новой локации удаляются все объекты, добавленные функцией set_map_object
				и автоматически добавляется ГГ (me, Семён)
		
		Скрытие локации:
			$ hide_location()
			Внимание! Игра заканчивается, когда выполнены все команды выполняемой метки и при этом не отображается никакая локация
				Это вытекает из того, что игрок получает управление персонажем только тогда, когда выполнены все команды метки,
				а до этого момента (и после, когда опять выполняется какая-либо метка) игра едет по рельсам
				без всякой свободы действий (за исключением команды menu)
		
		Регистрация локации:
			register_location("location_name", "path_to_images", "no_pictures")
			Где location_name - имя локации
			    path_to_images - путь к каталогу с картинками (png) локаций (относительно каталога мода)
			    	Имена этих картинок:
			    		main.png - основное изображение
			    		over.png - изображение с тем, что находится сверху и под чем персонажи могут проходить
			    			Может отсутствовать
			    		free.png - изображение с закрашенными цветом #000000 недоступными для передвижения местами
			    			Может отсутствовать, тогда персонаж может ходить где угодно
			    no_pictures - строка, обозначающая отсутствие картинок 
			    	Должна содержать букву 'o', если нет over.png, и 'f', если нет free.png
		
		Регистрация места в локации:
			$ register_place("location_name", "place_name", x, y)
			Где location_name - имя локации
			    place_name - имя места
			    x и y - координаты (числа, без кавычек) места в локации (в пикселях)
		
		Регистрация выхода из локации:
			$ register_exit("location_name", "to_location_name", "to_place_name", x, y)
			Где location_name - имя локации, в которой располагается выход
			    to_location_name - имя локации, в которую будет произведён переход
			    to_place_name - имя места, в которое будет произведён переход
			    x и y - координаты (числа, без кавычек) места в локации (в пикселях)
		
		# Пока не реализовано
		Добавление фоновых звуков в локацию (пение птиц, нажатие на клавиатуру и т. д.):
			$ add_ambience("location_name", ambience_name)
			Где location_name - имя локации, в которую добавляется фоновый звук
			    ambience_name - то, что можно подставить после play ambience
		
		Регистрация персонажей:
			$ character.make_rpg("prefix_path_to_image", "dress")
			Где character - персонаж
			    prefix_path_to_image - часть пути к картинке 240x384, на которой в 4 ряда расположены 5 кадров на каждый поворот
			    	Кадры:
				    	1, 2, 3, 4 - ходьба/бег,
				    	2, 4 - стойка,
				    	5 - сидячее положение
				    Ряды
				    	{1, 2, 3, 4} - соответственно {на нас, налево, направо, от нас}
				dress - Начальная одежда
				    
				    Целый путь до картинки вычисляется как prefix_path_to_image + dress + '.png'
				    Где dress - одежда на персонаже ('pi', 'sw' и т. д.), задаваемая функцией set_dress
		
		Отображение персонажа на карте:
			$ show_character(character, "place_name")
		
		Скрытие персонажа на карте:
			$ hide_character(character)
		
		При переходе на какую-либо локацию удаляются все персонажи
		Семён добавляется заново автоматически
		
		В любом месте сценария
			cur_location_name будет являться названием текущей локации
			cur_place_name - названием текущего места в ней (или None, если игрок слишком далеко от всех зарегистрированных мест)
		
		# Пока не реализовано
		Перед переходом на какую-либо локацию выполняется переход на метку check_change_location
		В начале выполнения этой метки переменная can_change_location == True (всегда)
		Если после выполнения этой метки can_change_location == False, то переход в следующую локацию не происходит
		Во время выполнения этой метки доступны дополнительные переменные
			next_location_name - имя локации, в которую осуществляется переход
			next_place_name - имя места в этой локации
		
		# Пока не реализовано
		После перехода в локацию выполняется метка on_change_location
		При перемещение в зону определённого места в локации, зарегистрированного с помощью register_place выполняется on_enter_to_place
		
		Принудительное передвижение персонажа:
			$ character.move_to_place("place_name", is_run)
				Где character - имя передвигаемого персонажа
				    place_name - название места, в которое он передвигается
				    is_run - True (если бежит) или False (если идёт)
			Пока не дойдёт до конца, никаких действий в игре не происходит, мотать ничего нельзя
		
		Поворот персонажа:
			$ character.set_direction(direction)
			Где character - персонаж
			    direction - направление: forward (от нас), back (на нас), left(влево), right(вправо)
			    	На самом деле direction - число, а {forward, back, left, right} - переменные, равные {3, 0, 1, 2} соответственно
			    	Но использовать напрямую числа вместо переменных не рекомендуется
			    		Т. к. в будущем цифры могут быть изменены, тогда как имена переменных останутся прежними
		
		Смена положения:
			$ character.set_pose("pose")
			Где character - персонаж
			    pose - поза, допустимы:
			    	"sit" - сидеть
			    	"stance" - стоять
		
		Сказать камере следить не за ГГ, а за точкой:
			$ cam_to_point(x, y)
			Где x, y - координаты на локации (в пикселях), за которыми будет следить камера
			Перемещение камеры от текущей позиции до точки займёт 1 секунду
		
		Сказать камере следить не за ГГ, а за другим персонажем:
			$ cam_to_character(character)
			Где character - персонаж, за которым будет следовать камера
		
		Вернуть камеру на следование за ГГ, если что, можно так:
			$ cam_to_character(me)
			Что вроде логично
		
		Регистрация объекта для отображения в локации:
			register_map_object("obj_name", "path_to_image")
				Где obj_name - название регистрируемого объекта, который будет отображаться в локации
				    path_to_image - путь к изображению
		
		Добавление объекта в локацию:
			set_map_object("obj_name", x, y)
				Где obj_name - название зарегистрированного (с помощью register_map_object) объекта, который будет отображаться в локации
				    x, y - координаты на локации (в пикселях), в которые будет поставлен объект
		
		Удаление объекта с локации
			hide_map_object("obj_name")
			Где obj_name - имя объекта, которое было указано параметром pseudonym при создании
			Все объекты автоматически удаляются при переключении на другую локацию
